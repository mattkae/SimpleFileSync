* SimpleFileSync

** Overview
The goal of this project is to reacquint myself with modern C++ by solving some of my organization problems. Essentially, I have a bunch of org files scattered throughout my computers and accounts that I would like to sync with a centralized server. Of course, there are many services that would easily do this for me, but I think that it would be more fun to do it by myself and, in the process, discover all of the new things that I've been missing in C++.
** Architecture
The project will feature a single centralized server talking to multiple clients. The server will have a file with the latest version and hash of the data. If the client agrees with the version and hash, nothing will happen. If the client disagrees with the version and hash, either one of two things will happen:
1. The client is on a previously valid version, which is found by comparing the local hash and local version to a remote hash and remote version. In this case, the client will simply upgrade to the latest version by syncing all of the files to its computer.
2. The client has made local changes that are not yet reflected on the server, which is found by failing to find the local hash and local version in the remote version list. In this case, the client will attempt to merge its local work with the remote work. In the event that two users modified the same file, we will save both files in the format ~<original_file_name_HASH>~ so that the user can manually fix them on their own.
** What does it mean to use modern C++?
- No raw pointers
- No raw strings
- Cmake
- Modern C++ features
- clang-tidy
